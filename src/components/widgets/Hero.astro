---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';
import { ElButton } from 'element-plus';
const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),

  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </div>
  <div class="relative mx-auto">
    <div
      class="intersect-once intercept-no-queue intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
    >
      <div class="relative w-full h-full">
        <img class="w-full" src="/assets/images/game-img.png" alt="" />

        <!-- 文字内容 -->
        <div
          class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white font-bold text-lg flex flex-col items-center justify-between"
        >
          <div>
            <img src="/assets/images/ffClould.png" alt="" class="mt-[] w-[17.87vw] h-[4.17vw]" />
          </div>
          <div>
            <img src="/assets/images/ffClouldDesc.png" alt="" class="mt-[] w-[46.51vw] h-[4.17vw]" />
          </div>

          <div>
            <a
              id="gameLibraryLink"
              class="w-[12.19vw] h-[3.84vw] mt-[2.71vw] cursor-pointer flex items-center justify-center"
              style="border-radius: 0.31vw; font-size: 1.35vw; color: #FFFFFF; font-weight: 400; position: relative;"
            >
              游戏库
            </a>
          </div>
        </div>
      </div>
    </div>
    <div
      class="w-full absolute bottom-0 h-[4.5vw]"
      style=" opacity: 0.7; background: linear-gradient(to bottom, transparent 0%,  #221D1B 56.36%, #000000 100%);"
    >
    </div>
  </div>
</section>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    var link = document.getElementById('gameLibraryLink');
    if (link) {
      link.addEventListener('click', function (event) {
        // 延迟执行，确保能够处理所有设备
        setTimeout(function () {
          window.location.href = '/gameLibrary';
        }, 10); // 延迟10ms避免阻止默认跳转的冲突
      });
    }
  });
</script>
<style>
  #gameLibraryLink {
    position: relative;
    display: inline-block;
    overflow: hidden; /* 确保扩展的背景不会超出元素 */
  }

  /* 用伪元素添加扩散的背景色 */
  #gameLibraryLink::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200%;
    background-color: #a4aaad; /* 扩展的背景色 */
    transition: all 0.5s ease; /* 动画效果 */
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0); /* 初始状态：缩放到0，居中 */
    z-index: -1; /* 确保背景色不会覆盖文本 */
  }

  /* 鼠标悬停时，背景色从中心扩展 */
  #gameLibraryLink:hover::before {
    transform: translate(-50%, -50%) scale(1); /* 鼠标移入时，背景色扩展到整个元素 */
  }

  /* 给链接文字添加样式 */
  #gameLibraryLink {
   background: #E3E3E340; /* 初始背景透明 */
   text-align: center;
   line-height: 3.84vw;
  }
</style>
